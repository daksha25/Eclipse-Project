!SESSION 2017-04-19 10:29:32.399 -----------------------------------------------
eclipse.buildId=4.3.0.I20130605-2000
java.version=1.8.0_121
java.vendor=Oracle Corporation
BootLoader constants: OS=win32, ARCH=x86, WS=win32, NL=en_US
Framework arguments:  -product org.eclipse.epp.package.jee.product
Command-line arguments:  -os win32 -ws win32 -arch x86 -product org.eclipse.epp.package.jee.product

This is a continuation of log file D:\eclipse\eclips projects\.metadata\.bak_0.log
Created Time: 2017-04-20 18:36:27.525

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:27.526
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:27.527
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:31.112
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src="https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:31.113
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:31.114
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:31.252
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src="https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:31.253
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:31.254
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:32.510
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:32.511
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:32.512
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:32.548
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:32.550
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:32.551
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:33.265
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:33.266
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:33.267
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:40.285
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:40.287
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:40.287
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:40.508
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:40.509
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:40.510
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.internalGetHoverInfo(NLSStringHover.java:135)
	at org.eclipse.jdt.internal.ui.text.java.hover.NLSStringHover.getHoverInfo2(NLSStringHover.java:114)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:163)
	at org.eclipse.jdt.internal.ui.text.java.hover.BestMatchHover.getHoverInfo2(BestMatchHover.java:129)
	at org.eclipse.jdt.internal.ui.text.java.hover.JavaEditorTextHoverProxy.getHoverInfo2(JavaEditorTextHoverProxy.java:85)
	at org.eclipse.jface.text.TextViewerHoverManager$4.run(TextViewerHoverManager.java:166)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:41.008
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:41.010
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:41.011
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:43.186
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
	    <script type="text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:43.187
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:43.188
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:48.082
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:48.085
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:48.086
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:48.130
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript">
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:48.131
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:48.133
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:57.140
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:57.141
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:57.142
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:36:57.173
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:36:57.175
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:36:57.175
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:11.660
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:11.661
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:11.662
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:12.448
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>IMAGE NAME = "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:12.450
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:12.451
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:16.172
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Cla "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:16.173
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:16.174
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:16.206
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Cla "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:16.207
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:16.208
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:19.352
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Repor "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:19.354
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:19.354
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:19.386
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:19.388
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:19.388
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:19.815
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:19.817
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:19.817
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:20.392
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:20.393
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:20.394
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:23.046
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:23.048
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:23.048
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:25.696
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:25.698
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:25.698
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:26.631
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:26.633
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:26.633
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:29.934
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report  "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:29.936
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:29.936
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:29.978
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report -  "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:29.980
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:29.980
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:30.393
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report -  "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:30.395
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:30.395
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:30.964
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report -  "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:30.965
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:30.966
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:32.509
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:32.510
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:32.511
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:32.541
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:32.543
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:32.543
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:39.213
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:39.214
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:39.215
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:39.803
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:39.805
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:39.805
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.getClipboardData(ClipboardOperationAction.java:449)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.doCutCopyWithImportsOperation(ClipboardOperationAction.java:376)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.internalDoOperation(ClipboardOperationAction.java:330)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction$1.run(ClipboardOperationAction.java:278)
	at org.eclipse.swt.custom.BusyIndicator.showWhile(BusyIndicator.java:70)
	at org.eclipse.jdt.internal.ui.javaeditor.ClipboardOperationAction.run(ClipboardOperationAction.java:276)
	at org.eclipse.jface.action.Action.runWithEvent(Action.java:499)
	at org.eclipse.jface.commands.ActionHandler.execute(ActionHandler.java:119)
	at org.eclipse.ui.internal.handlers.E4HandlerProxy.execute(E4HandlerProxy.java:90)
	at sun.reflect.GeneratedMethodAccessor171.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.e4.core.internal.di.MethodRequestor.execute(MethodRequestor.java:56)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invokeUsingClass(InjectorImpl.java:243)
	at org.eclipse.e4.core.internal.di.InjectorImpl.invoke(InjectorImpl.java:224)
	at org.eclipse.e4.core.contexts.ContextInjectionFactory.invoke(ContextInjectionFactory.java:132)
	at org.eclipse.e4.core.commands.internal.HandlerServiceHandler.execute(HandlerServiceHandler.java:167)
	at org.eclipse.core.commands.Command.executeWithChecks(Command.java:499)
	at org.eclipse.core.commands.ParameterizedCommand.executeWithChecks(ParameterizedCommand.java:508)
	at org.eclipse.e4.core.commands.internal.HandlerServiceImpl.executeHandler(HandlerServiceImpl.java:213)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.executeCommand(KeyBindingDispatcher.java:285)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.press(KeyBindingDispatcher.java:504)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.processKeyEvent(KeyBindingDispatcher.java:555)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.filterKeySequenceBindings(KeyBindingDispatcher.java:376)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher.access$0(KeyBindingDispatcher.java:322)
	at org.eclipse.e4.ui.bindings.keys.KeyBindingDispatcher$KeyDownFilter.handleEvent(KeyBindingDispatcher.java:84)
	at org.eclipse.swt.widgets.EventTable.sendEvent(EventTable.java:84)
	at org.eclipse.swt.widgets.Display.filterEvent(Display.java:1262)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1056)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1081)
	at org.eclipse.swt.widgets.Widget.sendEvent(Widget.java:1066)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1108)
	at org.eclipse.swt.widgets.Widget.sendKeyEvent(Widget.java:1104)
	at org.eclipse.swt.widgets.Widget.wmChar(Widget.java:1525)
	at org.eclipse.swt.widgets.Control.WM_CHAR(Control.java:4723)
	at org.eclipse.swt.widgets.Canvas.WM_CHAR(Canvas.java:344)
	at org.eclipse.swt.widgets.Control.windowProc(Control.java:4611)
	at org.eclipse.swt.widgets.Canvas.windowProc(Canvas.java:340)
	at org.eclipse.swt.widgets.Display.windowProc(Display.java:4977)
	at org.eclipse.swt.internal.win32.OS.DispatchMessageW(Native Method)
	at org.eclipse.swt.internal.win32.OS.DispatchMessage(OS.java:2549)
	at org.eclipse.swt.widgets.Display.readAndDispatch(Display.java:3757)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine$9.run(PartRenderingEngine.java:1113)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.e4.ui.internal.workbench.swt.PartRenderingEngine.run(PartRenderingEngine.java:997)
	at org.eclipse.e4.ui.internal.workbench.E4Workbench.createAndRunUI(E4Workbench.java:138)
	at org.eclipse.ui.internal.Workbench$5.run(Workbench.java:610)
	at org.eclipse.core.databinding.observable.Realm.runWithDefault(Realm.java:332)
	at org.eclipse.ui.internal.Workbench.createAndRunWorkbench(Workbench.java:567)
	at org.eclipse.ui.PlatformUI.createAndRunWorkbench(PlatformUI.java:150)
	at org.eclipse.ui.internal.ide.application.IDEApplication.start(IDEApplication.java:124)
	at org.eclipse.equinox.internal.app.EclipseAppHandle.run(EclipseAppHandle.java:196)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.runApplication(EclipseAppLauncher.java:110)
	at org.eclipse.core.runtime.internal.adaptor.EclipseAppLauncher.start(EclipseAppLauncher.java:79)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:354)
	at org.eclipse.core.runtime.adaptor.EclipseStarter.run(EclipseStarter.java:181)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.eclipse.equinox.launcher.Main.invokeFramework(Main.java:636)
	at org.eclipse.equinox.launcher.Main.basicRun(Main.java:591)
	at org.eclipse.equinox.launcher.Main.run(Main.java:1450)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:41.890
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
	      google.charts.load("current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:41.891
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:41.892
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:46.671
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:46.673
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:46.674
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:46.706
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current", {packages:["corechart"]});
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:46.709
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:46.709
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:58.938
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current\", {packages:[\"corechart\"]});"
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:58.939
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:58.940
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:58.967
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current\", {packages:[\"corechart\"]});"
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:58.969
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:58.969
!MESSAGE Error in JDT Core during AST creation
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:37:59.996
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current\", {packages:[\"corechart\"]});"+
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:37:59.997
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.ui 4 0 2017-04-20 18:37:59.998
!MESSAGE Error in JDT Core during reconcile
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.AST.convertCompilationUnit(AST.java:270)
	at org.eclipse.jdt.internal.core.CompilationUnit.buildStructure(CompilationUnit.java:204)
	at org.eclipse.jdt.internal.core.Openable.generateInfos(Openable.java:259)
	at org.eclipse.jdt.internal.core.JavaElement.openWhenClosed(JavaElement.java:587)
	at org.eclipse.jdt.internal.core.CompilationUnit.makeConsistent(CompilationUnit.java:1102)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.makeConsistent(ReconcileWorkingCopyOperation.java:171)
	at org.eclipse.jdt.internal.core.ReconcileWorkingCopyOperation.executeOperation(ReconcileWorkingCopyOperation.java:90)
	at org.eclipse.jdt.internal.core.JavaModelOperation.run(JavaModelOperation.java:729)
	at org.eclipse.jdt.internal.core.JavaModelOperation.runOperation(JavaModelOperation.java:789)
	at org.eclipse.jdt.internal.core.CompilationUnit.reconcile(CompilationUnit.java:1272)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:126)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.access$0(JavaReconcilingStrategy.java:108)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy$1.run(JavaReconcilingStrategy.java:89)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:87)
	at org.eclipse.jdt.internal.ui.text.java.JavaReconcilingStrategy.reconcile(JavaReconcilingStrategy.java:151)
	at org.eclipse.jdt.internal.ui.text.CompositeReconcilingStrategy.reconcile(CompositeReconcilingStrategy.java:86)
	at org.eclipse.jdt.internal.ui.text.JavaCompositeReconcilingStrategy.reconcile(JavaCompositeReconcilingStrategy.java:104)
	at org.eclipse.jface.text.reconciler.MonoReconciler.process(MonoReconciler.java:77)
	at org.eclipse.jface.text.reconciler.AbstractReconciler$BackgroundThread.run(AbstractReconciler.java:206)

!ENTRY org.eclipse.jdt.core 4 4 2017-04-20 18:38:00.026
!MESSAGE Exception occurred during compilation unit conversion:
----------------------------------- SOURCE BEGIN -------------------------------------
package org.jenkinsci.plugins.clairdockerscannerbuildstep;

import hudson.Launcher;
import hudson.EnvVars;
import hudson.Launcher.ProcStarter;
import hudson.FilePath;
import hudson.model.AbstractBuild;
import hudson.model.BuildListener;
import hudson.util.ArgumentListBuilder;
//import org.apache.http.HttpResponse;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.PrintStream;
import java.io.IOException;
import java.io.InterruptedIOException;
import java.net.InetSocketAddress;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import javax.servlet.ServletException;

//import org.apache.http.HttpResponse;

import hudson.model.Computer;
import hudson.remoting.Callable;
import hudson.remoting.Channel;
import hudson.model.AbstractBuild;
import hudson.model.AbstractProject;
import hudson.slaves.Channels;
import java.net.*;

/**
 * This class does the actual execution..
 * 
 */
public class Text_HTMLConverter {
	static int countHigh = 0;
	static int countMed = 0;
	static int countLow = 0;
	static int countNeg = 0;
	 static int total;
	static int perHigh;
	static int perMed;
	static int perLow;
	static int perNeg;

	@SuppressWarnings("deprecation")
	public static FilePath text_to_html(File outFile, FilePath outfilFilePath1, PrintStream out)
			throws IOException, InterruptedException {

		File file = new File(outFile.toString());
		String content = new Scanner(new File(outFile.toString())).useDelimiter("\\Z").next();

		FileReader fileReader = new FileReader(file);
		BufferedReader bufferedReader = new BufferedReader(fileReader);

		String line = null;
		System.setProperty("hudson.model.DirectoryBrowserSupport.CSP", "");

		List<String> list = new ArrayList<String>();
		list.removeAll(Arrays.asList("", null));

		while ((line = bufferedReader.readLine()) != null) {
			list.add(line);
		}

		String[] stringArr = list.toArray(new String[0]);

		for (int j = 0; j < stringArr.length; j++) {
			stringArr[j] = stringArr[j].trim();
		}

		fileReader.close();

		String[] value = stringArr[0].split("Clair report for image ");
		String[] value1 = value[1].split(" ");

		out.println("<!doctype html>");
		out.println(
				"<div id=Heading style=\"background:#33AFFF ;\"><h2 align=\"center\" style=\"color:white;\"><b><u>Clair Report - "
						+ value1[0] + "<br></u></b></h2>");
		out.println("</div");

		out.println("<html lang = \"en\">");
		out.println("<head>");
		out.println("<meta charset = \"utf-8\">");
		out.println("<title>Clair Inputs</title>");

		out.println(
				"<link href = \"https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css\"\" rel = \"stylesheet\">");
		out.println("<script src = \"https://code.jquery.com/jquery-1.10.2.js\"></script>");
		out.println("<script src = \"https://code.jquery.com/ui/1.10.4/jquery-ui.js\"></script>");
		out.println();

		out.println("<script>");
		out.println("$(function() {");
		out.println("$( \"#tabs-1\" ).tabs();");
		out.println("});");
		out.println("</script>");

out.println("<script type=\"text/javascript\">$(document).ready(function() { $(\"button\").click(function(e) {e.preventDefault();");
   out.println(" var data_type = \'data:application/vnd.ms-excel\';");
    out.println("var table_div = document.getElementById('tabs-2'); var table_div1 = document.getElementById('tabs-3');var table_div2 = document.getElementById('tabs-4');");
	out.println("  var table_div3 = document.getElementById('tabs-5');var table_html = table_div.outerHTML.replace(/ /g, '%20');var table_html1 = table_div1.outerHTML.replace(/ /g, '%20');"+
	  "var table_html2 = table_div2.outerHTML.replace(/ /g, '%20'); var table_html3 = table_div3.outerHTML.replace(/ /g, '%20');"+

    "var a = document.createElement('a');a.href = data_type + ', ' + table_html+table_html1+table_html2+table_html3;a.download = 'Clair_Report' + '.xls';"
   +" a.click(); });});");
		out.println("</script>");
		out.println("<script type=\"text/javascript\" src=\"https://www.gstatic.com/charts/loader.js\"></script>");
		out.println("<script type=\"text/javascript\">");
		out.println("google.charts.load(\"current\", {packages:[\"corechart\"]});"+
	      google.charts.setOnLoadCallback(drawChart);
	      function drawChart() {
	        var data = google.visualization.arrayToDataTable([
	          ['Task', 'Hours per Day'],
	          ['High',     20],
	          ['Medium',      10],
	          ['Low',  25],
	          ['Negligible', 29]
	         
	        ]);

	        var options = {
	          title: 'Severity Graph',
	          pieHole: 0.4,
	        };

	        var chart = new google.visualization.PieChart(document.getElementById('donutchart'));
	        chart.draw(data, options);
	      }
	    </script>
	  </head>
		out.println("<style>");

		out.println("#tabs-1{font-size: 14px;}");
		out.println(".ui-widget-header {");
		out.println("background:#33AFFF;");

		out.println("border: 1px solid #33AFFF;");
		out.println("color: #FFFFFF;");
		out.println("font-weight: bold;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("</style>");

		out.println("<style>");

		out.println("table {");
		out.println("border-collapse: collapse;");
		out.println("width: 100%;");
		out.println("font-family: Helvetica, Arial, sans-serif;");
		out.println("}");
		out.println("");

		out.println("th, td {");
		out.println("text-align: left;");
		out.println("padding: 8px;");
		out.println("}");
		out.println("");

		out.println("tr:nth-child(even){background-color: #f2f2f2}");
		out.println("");

		out.println("th {");
		out.println("text-align: left;");
		out.println("background-color: #33AFFF;");
		out.println("color: white;");
		out.println("}");
		out.println("</style>");
		out.println("<style>");
	out.println(".button { display: inline-block; padding: 10px 20px;font-size: 16px; cursor: pointer; text-align: center;text-decoration: none; outline: none;color: #fff;background-color: #33AFFF;"+
		 " border: none; border-radius: 15px; box-shadow: 0 5px #999; float: right;	}");

	out.println(".button:hover {background-color: #33AFFF}"+".button:active { background-color: #33AFFF; box-shadow: 0 3px #666; transform: translateY(4px);}");
		out.println("</style>");
		out.println("</head>");
		out.println("");

		String pattern_severity = "High|Medium|Low|Negligible";
		Pattern r = Pattern.compile(pattern_severity);

		String pattern_id = "(^[CVE-]+[0-9]{4}-[0-9]{4})";
		Pattern r1 = Pattern.compile(pattern_id);

		String desc = "(^[CVE]+[-].*)";
		Pattern strDesc = Pattern.compile(desc);

		String pattern_pack = "(^Package:.*)";
		Pattern r2 = Pattern.compile(pattern_pack);

		String pattern_link = "(^Link:.*)";
		Pattern r3 = Pattern.compile(pattern_link);

		String pattern_layer = "(^Layer:.*)";
		Pattern r4 = Pattern.compile(pattern_layer);

		Matcher m = null;
		Matcher m1 = null;
		Matcher m2 = null;
		Matcher m3 = null;
		Matcher m4 = null;
		Matcher d = null;

		int i = 1;

		String str_ID[] = new String[stringArr.length];
		String str_Pack[] = new String[stringArr.length];
		String str_Link[] = new String[stringArr.length];
		String str_Layer[] = new String[stringArr.length];
		String str_Severe[] = new String[stringArr.length];

		String str = null;

		while (i <= stringArr.length - 1) {
			m = r.matcher(stringArr[i]);
			m1 = r1.matcher(stringArr[i]);
			m2 = r2.matcher(stringArr[i]);
			m3 = r3.matcher(stringArr[i]);
			m4 = r4.matcher(stringArr[i]);
			d = strDesc.matcher(stringArr[i]);

			if (d.find()) {
				String strNew = d.group();
				content = content.replace(strNew, "<td>");
			}

			if (m1.find()) {
				str_ID[i] = m1.group();
			}

			if (m.find()) {
				str_Severe[i] = m.group();
			}

			if (m2.find()) {
				str = m2.group();
				content = content.replace(str, "</td>");
				str = str.replaceAll("Package: ", "");
				str_Pack[i] = str;
			}

			if (m3.find()) {
				str = m3.group();
				content = content.replace(stringArr[i], "");
				str = str.replaceAll("Link: ", "");
				str_Link[i] = str;
			}

			if (m4.find()) {
				str = m4.group();
				content = content.replace(str, "");
				str = str.replaceAll("Layer: ", "");
				str_Layer[i] = str;
			}
			i++;
		}

		String[] arr1 = content.split("<td>");

		String strNew = "";
		for (int j = 1; j < arr1.length; j++) {
			strNew = strNew.concat(arr1[j]);
		}

		String[] arr2 = strNew.split("</td>");

		String str_Desc[] = new String[str_ID.length];
		str_Desc = arr2;

		ArrayList<String> listID = new ArrayList<String>();
		for (String s : str_ID)
			if (s != null)
				listID.add(s);

		ArrayList<String> listSevere = new ArrayList<String>();
		for (String s : str_Severe)
			if (s != null)
				listSevere.add(s);

		ArrayList<String> listPack = new ArrayList<String>();
		for (String s : str_Pack)
			if (s != null)
				listPack.add(s);

		ArrayList<String> listLink = new ArrayList<String>();
		for (String s : str_Link)
			if (s != null)
				listLink.add(s);

		str_ID = listID.toArray(new String[listID.size()]);
		str_Severe = listSevere.toArray(new String[listSevere.size()]);
		str_Pack = listPack.toArray(new String[listPack.size()]);
		str_Link = listLink.toArray(new String[listLink.size()]);

		out.println("<body>");
		out.println("<button class=\"button\">Export to Excel</button><br></br>");
		out.println("<h4 style=\"color:#33AFFF ;\"><u><b>Severity Summary</b></u></h4>");
		out.println("<table style=\"width:100%;\">");
		out.println("<tr>");
		out.println("<th>High</th>");
		out.println("<th>Medium</th>");
		out.println("<th>Low</th>");
		out.println("<th>Negligible</th>");
		out.println("</tr>");
		out.println("<tr>");
		out.println("<td><div class=\"high-count\"></div></td>");
		out.println("<td><div class=\"med-count\"></div></td>");
		out.println("<td><div class=\"low-count\"></div></td>");
		out.println("<td><div class=\"neg-count\"></div></td>");
		out.println("</tr>");
		out.println("");

		out.println("</table>");
		out.println("<br><br>");
		out.println("<div id=\"container\" style=\"min-width: 250px; max-width: 500px; height: 200px; margin: 0;\"></div>");
		
		out.println("<br><br>");
		out.println("");
		out.println("<p></p>");
		out.println("<p></p>");
		out.println("<div id = \"tabs-1\">");
		out.println("<ul>");
		out.println("<li><a href = \"#tabs-2\">High</a></li>");
		out.println("<li><a href = \"#tabs-3\">Medium</a></li>");
		out.println("<li><a href = \"#tabs-4\">Low</a></li>");
		out.println("<li><a href = \"#tabs-5\">Negligible</a></li>");
		out.println("</ul>");

		out.println("<div id = \"tabs-2\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		int j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("High")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#b30000  \">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countHigh++;
			}
			j++;
		}

		out.println("</table>");
		out.println("");

		out.println("</div>");
		out.println("<div id = \"tabs-3\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th align=\"center\">ID</th>");
		out.println("<th align=\"center\">Description</th>");
		out.println("<th align=\"center\">Package</th>");
		out.println("<th align=\"center\">Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Medium")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#ff6600 \">" + str_ID[j] + "</font>" + "</td>");
				// out.println("<td width=\"10%\">" + str_ID[j] + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countMed++;
			}
			j++;
		}
		out.println("</table>");

		out.println("</div>");
		out.println("<div id = \"tabs-4\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");

		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Low")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#666666\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countLow++;
			}
			j++;
		}

		out.println("</table>");
		out.println("</div>");
		out.println("<div id = \"tabs-5\">");
		out.println("<table>");
		out.println("<tr>");
		out.println("<th>ID</th>");
		out.println("<th>Description</th>");
		out.println("<th>Package</th>");
		out.println("<th>Link</th>");
		// out.println("<th>Layer</th>");
		out.println("</tr>");

		j = 0;
		while (j < str_ID.length) {
			if (str_Severe[j].equals("Negligible")) {
				out.println("<tr>");
				out.println("<td width=\"10%\">" + "<font color=\"#000000\">" + str_ID[j] + "</font>" + "</td>");
				out.println("<td width=\"45%\">" + str_Desc[j] + "</td>");
				out.println("<td width=\"20%\">" + str_Pack[j] + "</td>");
				out.println("<td><a href=\"" + str_Link[j] + "\">" + str_Link[j] + "</a></td>");
				// out.println("<td>"+str_Layer[j]+"</td>");
				out.println("</tr>");
				countNeg++;
			}
			j++;
		}
		/*total=countHigh+countMed+countLow+countNeg;
		System.out.println("total is : "+total);
		perHigh=(countHigh*100)/total;
		System.out.println("perhigh is : "+perHigh);
		perMed=(countMed*100)/total;
		System.out.println("perMed is : "+perMed);
		perLow=(countLow*100)/total;
		System.out.println("perLow is : "+perLow);
		perNeg=(countNeg*100)/total;
		System.out.println("perNeg is : "+perNeg);
		
*/
		out.println("</table>");
		out.println("</div>");
		out.println("</div>");
		out.println("</body>");

		out.println("<script type=\"text/javascript\">");
		out.println("$('div.high-count').text('" + countHigh + "');");
		out.println("$('div.med-count').text('" + countMed + "');");
		out.println("$('div.low-count').text('" + countLow + "');");
		out.println("$('div.neg-count').text('" + countNeg + "');");
		out.println("</script>");
		out.println("<div id=\"donutchart\" style=\"width: 900px; height: 500px;\"></div>");
		//out.println("<script src=\"https://code.highcharts.com/highcharts.js\"></script>");
		//out.println("<script src=\"https://code.highcharts.com/modules/exporting.js\"></script>");
		
	
	 
		
		
		
		/*out.println("<script>");

		out.println("Highcharts.chart('container', {chart: { type: 'bar'  }, title: {text: 'Graph for Severity'  }, xAxis: { categories: ['Severity'] },yAxis:{  min: 0,title: { text: 'Severity Value'} },legend: {reversed: true },	 plotOptions: {	series: {stacking:'normal' } },	series: [{ name: 'Negligible',data: ["+countNeg+"] }, { name: 'Low', data: ["+countLow+"]}, {  name: 'Medium',   data: ["+countMed+"] },{  name: 'High',data: ["+countHigh+"]    },]});");
	   out.println("</script>");*/
		
		
	/*	 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').text('" + countHigh + "');");
		 out.println("$('span.bar-2').text('" + countMed + "');");
		 out.println("$('span.bar-3').text('" + countLow + "');");
		 out.println("$('span.bar-4').text('" + countNeg + "');");
		 out.println("</script>");
		 
		 out.println("<script type=\"text/javascript\">");
		 out.println("$('span.bar-1').width('" +perHigh +"%"+ "');");
		 out.println("$('span.bar-2').width('" + perMed + "%"+"');");
		 out.println("$('span.bar-3').width('" + perLow +"%"+ "');");
		 out.println("$('span.bar-4').width('" + perNeg +"%"+ "');");
		 out.println("</script>");
		 */

		out.println("</html>");
		out.println("");
		out.println("");
		System.out.println("High value" + countHigh);
		System.out.println("High Medium" + countMed);
		System.out.println("High Low" + countLow);
		System.out.println("High Neg" + countNeg);
		
		out.close();
		// outfilFilePath1.copyTo(target);
		return outfilFilePath1;

	}

	public static boolean checkQualityGate(int high, int low, int medium, Boolean Severity, AbstractBuild build) {
		System.out.println(countHigh + "," + Text_HTMLConverter.countMed + "," + Text_HTMLConverter.countLow);
		boolean result = false;
		int c = 0;
		if (Severity != false) {
			// if (countHigh != 0 && countLow != 0 && countMed != 0) {

			if (countHigh > high || countLow > low || countMed > medium) {
				result = true;
			}

			// TODO Auto-generated method stub

		}
		countHigh = 0;
		countLow = 0;
		countMed = 0;
		countNeg = 0;
		return result;
	}
}


----------------------------------- SOURCE END -------------------------------------
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)

!ENTRY org.eclipse.jdt.ui 4 2 2017-04-20 18:38:00.028
!MESSAGE Problems occurred when invoking code from plug-in: "org.eclipse.jdt.ui".
!STACK 0
java.lang.IllegalArgumentException
	at org.eclipse.jdt.core.dom.ASTNode.setSourceRange(ASTNode.java:2845)
	at org.eclipse.jdt.core.dom.ASTConverter.convertToFieldDeclaration(ASTConverter.java:3280)
	at org.eclipse.jdt.core.dom.ASTConverter.checkAndAddMultipleFieldDeclaration(ASTConverter.java:455)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:344)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2580)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1765)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:2820)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:674)
	at org.eclipse.jdt.core.dom.ASTConverter.buildBodyDeclarations(ASTConverter.java:207)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:3027)
	at org.eclipse.jdt.core.dom.ASTConverter.convert(ASTConverter.java:1443)
	at org.eclipse.jdt.core.dom.CompilationUnitResolver.convert(CompilationUnitResolver.java:301)
	at org.eclipse.jdt.core.dom.ASTParser.internalCreateAST(ASTParser.java:1216)
	at org.eclipse.jdt.core.dom.ASTParser.createAST(ASTParser.java:812)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider$1.run(ASTProvider.java:544)
	at org.eclipse.core.runtime.SafeRunner.run(SafeRunner.java:42)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.createAST(ASTProvider.java:537)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:480)
	at org.eclipse.jdt.internal.ui.javaeditor.ASTProvider.getAST(ASTProvider.java:470)
	at org.eclipse.jdt.ui.SharedASTProvider.getAST(SharedASTProvider.java:128)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup.calculateASTandInform(SelectionListenerWithASTManager.java:170)
	at org.eclipse.jdt.internal.ui.viewsupport.SelectionListenerWithASTManager$PartListenerGroup$3.run(SelectionListenerWithASTManager.java:155)
	at org.eclipse.core.internal.jobs.Worker.run(Worker.java:53)
