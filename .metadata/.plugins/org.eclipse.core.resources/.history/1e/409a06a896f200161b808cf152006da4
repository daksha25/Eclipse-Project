package com.cognizant;

import java.io.FileInputStream;

import japa.parser.JavaParser;
import japa.parser.ast.CompilationUnit;
import japa.parser.ast.body.MethodDeclaration;
import japa.parser.ast.visitor.VoidVisitorAdapter;

public class Test
  {
	  public static void main(String[] args) throws Exception {
        // creates an input stream for the file to be parsed
        FileInputStream in = new FileInputStream("D:\\eclipse\\eclips projects\\Parser_Handson\\src\\Parser\\Parser_Handson.java");

        // parse the file
        CompilationUnit cu = JavaParser.parse(in);
  
        // prints the resulting compilation unit to default system output
        System.out.println(cu.toString());
        new MethodVisitor().visit(cu, null);
	  }
  
        private static class MethodVisitor extends VoidVisitorAdapter{
       // VoidVisitorAdapter<Void> {
          
            public void visit(MethodDeclaration n, Void arg) {
                /* here you can access the attributes of the method.
                 this method will be called for all methods in this 
                 CompilationUnit, including inner class methods */
                System.out.println(n.getName());
                super.visit(n, arg);
            }
    
}
  }
  