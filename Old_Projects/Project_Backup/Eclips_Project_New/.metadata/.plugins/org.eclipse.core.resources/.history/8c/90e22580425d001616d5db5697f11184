import java.io.File;
import java.io.IOException;
import java.net.URISyntaxException;
import java.security.CodeSource;

import javax.swing.JOptionPane;

public class Main 
	
	{
		public static void main(String args[])
		{
//		{
//			DBConnect connect =new DBConnect();
//			connect.getdata();
//		}
//		}
//String path = "D:/Documents/databasbac.sql";
//String username = "root";
//String password = "daksha25*";
//String dbname = "test";
//String executeCmd = "<Path to MySQL Server 5.6>/bin/mysqldump -u " + username + " -p" + password + " --all-databases" + " -r " + path;
//Process runtimeProcess;
//try {
////    System.out.println(executeCmd);//this out put works in mysql shell
//    runtimeProcess = Runtime.getRuntime().exec(new String[] { "cmd.exe", "/c", executeCmd });
//    System.out.println(executeCmd);
////    runtimeProcess = Runtime.getRuntime().exec(executeCmd);
//    int processComplete = runtimeProcess.waitFor();
//    System.out.println("processComplete"+processComplete);
//    if (processComplete == 0) {
//        System.out.println("Backup created successfully");
//
//    } else {
//        System.out.println("Could not create the backup");
//    }
//} catch (Exception ex) {
//    ex.printStackTrace();
//}
//
//}
//}
			try
			{
			

			        /*NOTE: Getting path to the Jar file being executed*/
			        /*NOTE: YourImplementingClass-> replace with the class executing the code*/
			        CodeSource codeSource = Main.class.getProtectionDomain().getCodeSource();
			        File jarFile = new File(codeSource.getLocation().toURI().getPath());
			        String jarDir = "D:\\Documents";
			        		//jarFile.getParentFile().getPath();


			        /*NOTE: Creating Database Constraints*/
			        String dbName = "test";
			        String dbUser = "root";
			        String dbPass = "daksha25*";

			        /*NOTE: Creating Path Constraints for folder saving*/
			        /*NOTE: Here the backup folder is created for saving inside it*/
			        String folderPath = jarDir + "\\backup";

			        /*NOTE: Creating Folder if it does not exist*/
			        File f1 = new File(folderPath);
			        f1.mkdir();

			        /*NOTE: Creating Path Constraints for backup saving*/
			        /*NOTE: Here the backup is saved in a folder called backup with the name backup.sql*/
			         String savePath = "\"" + jarDir + "\\backup\\" + "backup.sql\"";

			        /*NOTE: Used to create a cmd command*/
			        String executeCmd = "mysqldump -u" + dbUser + " -p" + dbPass + " --database " + dbName + " -r " + savePath;

			        /*NOTE: Executing the command here*/
			        Process runtimeProcess = Runtime.getRuntime().exec(executeCmd);
			        int processComplete = runtimeProcess.waitFor();

			        /*NOTE: processComplete=0 if correctly executed, will contain other values if not*/
			        if (processComplete == 0) {
			            System.out.println("Backup Complete");
			        } else {
			            System.out.println("Backup Failure");
			        }

			    } catch (URISyntaxException | IOException | InterruptedException ex) {
			        JOptionPane.showMessageDialog(null, "Error at Backuprestore" + ex.getMessage());
			   
			}
			
		
	}
		}
